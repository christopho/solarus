map{ id = "all_entities", description = "All entities" }
map{ id = "basic_test", description = "Basic test" }
map{ id = "bugs/486_diagonal_dynamic_tiles", description = "#486: Wrong obstacles with diagonal dynamic tiles" }
map{ id = "bugs/526_get_entities_same_region", description = "#526: map:get_entities_in_same_region()" }
map{ id = "bugs/656_map_set_world", description = "#656: map:set_world()" }
map{ id = "bugs/664_chest_get_set_treasure", description = "#664: chest:get/set_treasure()" }
map{ id = "bugs/669_entity_get_sprite", description = "#669: entity:get_sprite()" }
map{ id = "bugs/670_map_get_entities_no_hero", description = "#670: map:get_entities() does not return the hero" }
map{ id = "bugs/671_collision_test_not_moving", description = "#671: Custom entity collision not detected when not moving" }
map{ id = "bugs/686_crash_door_item", description = "#686: Crash with doors whose opening condition is an item" }
map{ id = "bugs/699_crash_exit_surface_moving", description = "#699: Crash at exit when a surface was moving" }
map{ id = "bugs/738_custom_entity_on_ground_below_changed", description = "#738: custom_entity:on_ground_below_changed() is not called" }
map{ id = "bugs/748_entity_overlaps_collision_modes", description = "#748: entity:overlaps() new paramater collision_mode" }
map{ id = "bugs/754_entity_get_max_bounding_box", description = "#754: entity:get_max_bounding_box" }
map{ id = "bugs/769_stuck_dynamic_tile_covered", description = "#769: Non-traversable dynamic tiles covered by traversable ones block the hero" }
map{ id = "bugs/779_get_entities_random_order", description = "#779: map:get_entities() returns entities in random order" }
map{ id = "bugs/781_assert_teletransporter_same_map", description = "#781: Assertion error when a teletransporter leads to the same map" }
map{ id = "bugs/794_custom_entity_set_can_traverse_ground", description = "#794: custom_entity:set_can_traverse_ground(\"traversable\", false) does not work" }
map{ id = "bugs/795_recreate_entity_same_name", description = "#795: Cannot create an entity with the same name as another one just removed" }
map{ id = "bugs/796_map_get_entities_by_type", description = "#796: Add map:get_entities_by_type()" }
map{ id = "bugs/805_hero_set_invincible", description = "#805: hero:set_invincible() not working" }
map{ id = "bugs/807_cannot_traverse_own_ground", description = "#807: Entity stuck if cannot traverse its own ground" }
map{ id = "bugs/808_get_entities_in_rectangle_duplicates", description = "#808: Duplicate entities in map:get_entities_in_rectangle()" }
map{ id = "bugs/810_hero_disappears_after_scrolling/1", description = "#810: The hero disappears after scrolling between adjacent maps" }
map{ id = "bugs/810_hero_disappears_after_scrolling/2", description = "#810" }
map{ id = "bugs/817_entity_set_enabled_overlapping_hero", description = "#817: entity:set_enabled() not working if it is an obstacle on the hero" }
map{ id = "bugs/818_sprite_get_num_frames", description = "#818: sprite:get_num_frames()" }
map{ id = "bugs/821_hero_start_attack", description = "#821: hero:start_attack()" }
map{ id = "bugs/823_sprite_get_size_origin", description = "#823: sprite:get_size() and sprite:get_origin()" }
map{ id = "bugs/830_entity_get_ground_position", description = "#830: entity:get_ground_position() and entity:get_ground_below()" }
map{ id = "dynamic_tile_tests", description = "Dynamic tile tests" }
map{ id = "jumper_tests", description = "Jumper tests" }
map{ id = "surface_tests", description = "Surface tests" }
map{ id = "traversable", description = "Traversable test area" }

tileset{ id = "castle", description = "Castle" }

sprite{ id = "enemies/enemy_killed", description = "Enemy killed" }
sprite{ id = "enemies/test_enemy", description = "Test enemy" }
sprite{ id = "entities/arrow", description = "Arrow" }
sprite{ id = "entities/block", description = "Block" }
sprite{ id = "entities/bomb", description = "Bomb" }
sprite{ id = "entities/bomb_flower", description = "Bomb flower" }
sprite{ id = "entities/bush", description = "Bush" }
sprite{ id = "entities/chest", description = "Chest" }
sprite{ id = "entities/crystal", description = "Crystal" }
sprite{ id = "entities/crystal_block", description = "Crystal block" }
sprite{ id = "entities/door", description = "Door" }
sprite{ id = "entities/explosion", description = "Explosion" }
sprite{ id = "entities/fire", description = "Fire" }
sprite{ id = "entities/grass", description = "Grass" }
sprite{ id = "entities/hookshot", description = "Hookshot" }
sprite{ id = "entities/items", description = "Items" }
sprite{ id = "entities/pot", description = "Pot" }
sprite{ id = "entities/rupee_icon", description = "Money icon" }
sprite{ id = "entities/shadow", description = "Shadow" }
sprite{ id = "entities/sign", description = "Sign" }
sprite{ id = "entities/solid_switch", description = "Solid switch" }
sprite{ id = "entities/star", description = "Star" }
sprite{ id = "entities/stone_small_black", description = "Stone (black)" }
sprite{ id = "entities/stone_small_white", description = "Stone (white)" }
sprite{ id = "entities/switch", description = "Switch" }
sprite{ id = "hero/ground1", description = "Grass under hero" }
sprite{ id = "hero/ground2", description = "Shallow water under hero" }
sprite{ id = "hero/shield1", description = "Hero shield 1" }
sprite{ id = "hero/sword1", description = "Hero sword 1" }
sprite{ id = "hero/sword_stars1", description = "Hero sword stars 1" }
sprite{ id = "hero/trail", description = "Hero trail" }
sprite{ id = "hero/tunic1", description = "Hero tunic 1" }
sprite{ id = "menus/solarus_logo", description = "Menu: Solarus logo" }
sprite{ id = "todo", description = "TODO image" }


sound{ id = "arrow_hit", description = "arrow_hit" }
sound{ id = "boomerang", description = "boomerang" }
sound{ id = "boss_hurt", description = "boss_hurt" }
sound{ id = "boss_killed", description = "boss_killed" }
sound{ id = "bow", description = "bow" }
sound{ id = "bush", description = "bush" }
sound{ id = "cane", description = "cane" }
sound{ id = "chest_open", description = "chest_open" }
sound{ id = "door_closed", description = "door_closed" }
sound{ id = "door_open", description = "door_open" }
sound{ id = "door_unlocked", description = "door_unlocked" }
sound{ id = "enemy_hurt", description = "enemy_hurt" }
sound{ id = "enemy_killed", description = "enemy_killed" }
sound{ id = "explosion", description = "explosion" }
sound{ id = "hero_falls", description = "hero_falls" }
sound{ id = "hero_hurt", description = "hero_hurt" }
sound{ id = "hero_lands", description = "hero_lands" }
sound{ id = "hero_pushes", description = "hero_pushes" }
sound{ id = "hookshot", description = "hookshot" }
sound{ id = "jump", description = "jump" }
sound{ id = "lift", description = "lift" }
sound{ id = "message_end", description = "message_end" }
sound{ id = "monster_hurt", description = "monster_hurt" }
sound{ id = "picked_item", description = "picked_item" }
sound{ id = "running", description = "running" }
sound{ id = "running_obstacle", description = "running_obstacle" }
sound{ id = "shield", description = "shield" }
sound{ id = "splash", description = "splash" }
sound{ id = "stairs_down_end", description = "stairs_down_end" }
sound{ id = "stairs_down_start", description = "stairs_down_start" }
sound{ id = "stairs_up_end", description = "stairs_up_end" }
sound{ id = "stairs_up_start", description = "stairs_up_start" }
sound{ id = "stone", description = "stone" }
sound{ id = "switch", description = "switch" }
sound{ id = "sword1", description = "sword1" }
sound{ id = "sword_spin_attack_load", description = "sword_spin_attack_load" }
sound{ id = "sword_spin_attack_release", description = "sword_spin_attack_release" }
sound{ id = "sword_tapping", description = "sword_tapping" }
sound{ id = "sword_tapping_weak_wall", description = "sword_tapping_weak_wall" }
sound{ id = "throw", description = "throw" }
sound{ id = "timer", description = "timer" }
sound{ id = "timer_hurry", description = "timer_hurry" }
sound{ id = "treasure", description = "treasure" }
sound{ id = "victory", description = "victory" }
sound{ id = "walk_on_grass", description = "walk_on_grass" }
sound{ id = "walk_on_water", description = "walk_on_water" }
sound{ id = "wrong", description = "wrong" }

item{ id = "bomb", description = "Bomb" }
item{ id = "sword", description = "Sword" }

enemy{ id = "test_enemy", description = "Test enemy" }


language{ id = "en", description = "English" }

font{ id = "8_bit", description = "8_bit" }
font{ id = "minecraftia", description = "minecraftia" }

